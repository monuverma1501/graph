#include <bits/stdc++.h>
using namespace std;
void toposort(int node,stack<int> &st,vector<int> &vis,vector<int> adj[]) 
{
    vis[node]=1; 
    for(auto it:adj[node]) 
    {
        if(!vis[it])
            toposort(it, st, vis, adj); 
    }
    st.push(node); 
}

void revDfs(int node,vector<int> &vis,vector<int> transpose[]) 
{
    cout<<node<<" "; 
    vis[node]=1; 
    for(auto it:transpose[node]) 
    {
        if(!vis[it]) 
            revDfs(it, vis, transpose); 
    }
}

int main() 
{
    int n,m;cin>>n>>m; 
    vector<int> adj[n+1]; 
    for(int i=0;i<m;i++) 
    {
        int u,v;cin>>u>>v; 
        adj[u].push_back(v);
    }

    //toposort
    stack<int> st;
    vector<int> vis(n+1,0); 
    for(int i = 1;i<=n;i++) 
    {
        if(!vis[i]) 
            toposort(i, st, vis, adj); 
    } 
    
    //transpose of graph
    vector<int> transpose[n+1]; 
    for(int i = 1;i<=n;i++)
    {
        vis[i]=0; 
        for(auto it:adj[i]) 
            transpose[it].push_back(i);      
    }

    
    while(!st.empty()) 
    {
        int node=st.top();
        st.pop(); 
        if(!vis[node]) 
        {
            cout<<"SCC: "; 
            revDfs(node,vis,transpose); 
            cout<<endl; 
        }
    }
}





//input
6 7
2 1
3 2
1 3
3 5
5 4
6 5
4 6



//output
SCC: 1 2 3 
SCC: 5 6 4 

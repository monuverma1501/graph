#include <bits/stdc++.h>
using namespace std;

void findTopoSort(int i,int vis[],stack<int> &st,vector<pair<int,int>> adj[]) 
{
    vis[i]=1; 
    for(auto it:adj[i]) 
    {
        if(!vis[it.first])
            findTopoSort(it.first,vis,st,adj); 
    }
    st.push(i);
}


void shortestPath(int src,int N,vector<pair<int,int>> adj[]) 
{ 
    int vis[N]={0};
    stack<int> st; 
    for(int i=0;i<N;i++) 
        if(!vis[i]) 
            findTopoSort(i,vis,st,adj); 
            
    int dist[N];
    for (int i = 0; i < N; i++) 
        dist[i] = 1e9; 
    dist[src] = 0; 

    while(!st.empty()) 
    {  
        int node=st.top(); 
        st.pop(); 
        if(dist[node]!=INT_MAX) 
        {
            for(auto it : adj[node]) 
            {
                if(dist[node]+it.second<dist[it.first]) 
                    dist[it.first] = dist[node] + it.second; 
            }
        }
    } 

    for (int i=0;i<N;i++) 
        cout << dist[i] <<" "; 
} 

int main()
{
    int n,e;cin>>n>>e;
    int sourceNODE;cin>>sourceNODE;
    vector<pair<int,int>> adj[n];
    for(int i=0;i<e;i++)
    {
        int a,b,w;
        cin>>a>>b>>w;
        adj[a].push_back({b,w});
    }
    shortestPath(sourceNODE,n,adj);
}




//input
9 11
3
0 1 2
0 3 3
3 1 5
3 4 4
4 5 7
5 6 3
1 2 1
2 6 6
6 7 2
6 8 1
8 7 6


//output

1000000000 5 6 0 4 11 12 14 13 

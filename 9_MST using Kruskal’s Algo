#include <bits/stdc++.h>
using namespace std;

int findPar(int u,vector<int> &par) 
{
    if(u==par[u]) 
        return u; 
    return par[u]=findPar(par[u],par); 
}

void merge(vector<int> &par,vector<int> &rank,int u,int v)
{
    u=findPar(u,par);
    v=findPar(v,par);
    if(rank[u]<rank[v]) 
    {
        par[u]=v;
    }
    else if(rank[v]<rank[u]) {
        par[v] = u; 
    }
    else 
    {
        par[v] = u;
        rank[u]++; 
    }
}

int main()
{
    int N,e;cin>>N>>e;
    vector<vector<int>> edges;
    for(int i=0;i<e;i++)
    { 
        int a,b,w;cin>>a>>b>>w;
        edges.push_back({a,b,w});
    }

    int ans=0;
    sort(edges.begin(),edges.end(),[](vector<int> &a,vector<int> &b)
    {
        return a[2]<b[2];
    });

    vector<int> par(N+1);
    for(int i=0;i<=N;i++)
        par[i]=i;

    vector<int> rank(N+1,0);
    
    for(int i=0;i<e;i++)
    {
        int a=edges[i][0];
        int b=edges[i][1];
        int w=edges[i][2];
        a=findPar(a,par);
        b=findPar(b,par);  
        if(a!=b)
        {
            cout<<a<<" -> "<<b<<endl;
            ans+=w;
            merge(par,rank,a,b);
        }
    }
    cout<<ans;
}



//input
5 8
2 1 5
3 1 2
4 1 2
1 5 3
3 2 2
5 2 1
3 4 4
5 4 2


//output
5 -> 2
3 -> 1
4 -> 3
3 -> 5
7
